enum ContentSource {
	PubMed
}

enum ReviewState {
	Hold,		//Estado inicial
    OnGoing,	//Em revisão
	Pending,	//Espera informação adicional
    Reviewed,	//Considerado como revisto
    Accepted	//Revisão aceite
}

// Nature, Scientific American, Emerging Infectious Diseases, etc..
entity PublicationSource {
	sourceName String,
    active Boolean
}

entity Article {
    fetchedFrom ContentSource, 	//Identifica plataforma original de importação
	sourceID Integer,			//Identifica o ID da plataforma original de importação
    sourceDate LocalDate,
	sourceTitle String,
    sourceAbstract String,
	importDate LocalDate,		//Data de publicação na nossa plataforma
    outboundLink String,
    keywords TextBlob,
	reviewState ReviewState		//Estado absoluto de validação da publicação
}

entity ArticleType {
	name String,
    active Boolean
}

entity CategoryTree {
	name String,
    active Boolean
}

entity Revision {
	title String,
    summary String,
    reviewer String,
    active Boolean,
    keywords TextBlob,
    absRevision TextBlob,
    reviewState ReviewState,
    returnNotes String,			//Notas de devolução
    reviewedByPeer Boolean,
    communityVotes Integer
}

entity Newsletter {
	name String,
    email String,
    registrationDate LocalDate,
    rgpdAuth Boolean
}

relationship ManyToMany {
	Newsletter to CategoryTree
}

relationship ManyToOne {
  CategoryTree{child} to CategoryTree
}

relationship OneToMany {
	Article to Revision{article}
}

relationship OneToMany {
	PublicationSource{name} to Article{pubName}
	ArticleType{name} to Revision{type}
	CategoryTree{name} to Revision{area}
}

// Set pagination options
paginate ArticleType, CategoryTree, PublicationSource with infinite-scroll
paginate Article, Revision, Newsletter with pagination

// Allow all entities to be filtered
filter Article, Revision, PublicationSource, Newsletter
// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
//service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix